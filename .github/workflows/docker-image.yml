name: Docker Image CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:

  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    
    - name: Docker Login - Azure Container Registry
      uses: Azure/docker-login@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        login-server: ${{ secrets.DOCKER_CONTAINER_REGISTRY }}
    
    - name: Build and Push the Docker image to Azure Container Registry
      run: | 
        docker build . --file Dockerfile --tag ${{ secrets.DOCKER_CONTAINER_REGISTRY }}/backend:latest
        docker tag ${{ secrets.DOCKER_CONTAINER_REGISTRY }}/backend:latest ${{ secrets.DOCKER_CONTAINER_REGISTRY }}/backend:$(date +%s)
        docker push ${{ secrets.DOCKER_CONTAINER_REGISTRY }}/backend
        
        cd ./frontend/
        docker build . --file Dockerfile --tag ${{ secrets.DOCKER_CONTAINER_REGISTRY }}/frontend:latest
        docker tag ${{ secrets.DOCKER_CONTAINER_REGISTRY }}/frontend:latest ${{ secrets.DOCKER_CONTAINER_REGISTRY }}/frontend:$(date +%s)
        docker push ${{ secrets.DOCKER_CONTAINER_REGISTRY }}/frontend
        
        
    - name: Azure Login for Deployment
      uses: Azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
        
    - name: Azure WebApp Container - Deployment of Applicattion
      uses: Azure/webapps-deploy@v2
      with:
        # Name of the Azure Web App
        app-name: PuppyFinder
        # Applies to Web App Containers only: Specify the fully qualified container image(s) name. For example, 'myregistry.azurecr.io/nginx:latest' or 'python:3.7.2-alpine/'. For multi-container scenario multiple container image names can be provided (multi-line separated)
        images: ${{ secrets.DOCKER_CONTAINER_REGISTRY }}/backend:latest
        # Applies to Web App Containers only: Path of the Docker-Compose file. Should be a fully qualified path or relative to the default working directory. Required for multi-container scenario
        #configuration-file: # optional

